name: Deploy Heroku App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Set up SSH key
      uses: webfactory/ssh-agent@v0.5.0
      with:
        ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

    - name: Lauch the MLflow tracking server on the server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_SSH_PORT }}
        run: |
          mlflow server --host 0.0.0.0 --port 5000

    - name: Lauch the API on the server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_SSH_PORT }}
        script: |
          # Download the api.py file
          curl -LO https://raw.githubusercontent.com/sam-planton/OC_P7_CreditScore/main/api.py
          # Start the API using Python, use "&" to move to the next action
          # nohup python3 api.py &
          # Start a new screen session and run the API in it
          screen -S api -dm python3 api.py
#        run: |
#          curl -LJO https://raw.githubusercontent.com/sam-planton/OC_P7_CreditScore/main/api.py
#          python3 api.py

    - name: Run tests
      env:
        API_URL: http://${{ secrets.SERVER_IP }}:8000/predict
      run: pytest test_api.py

#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

#     - name: Test with pytest
#       run: |
#         pytest

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploying to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: oc-p7-creditscore
          heroku_email: samuel.planton@gmail.com
#    - name: Start app
#      run: |
#        heroku run python dashboard.py

#  TestAPI:
#    needs: [test, lint]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up Python 3.10
#        uses: actions/setup-python@v3
#        with:
#          python-version: "3.10"
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8 pytest
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#
#      - name: Run tests
#        env:
#          API_URL: http://${{ secrets.SERVER_IP }}:8000/predict
#        run: pytest test_api.py

#    - name: Execute script to launch API on server
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.SERVER_IP }}
#        username: ${{ secrets.SERVER_USER }}
#        key: ${{ secrets.SERVER_SSH_KEY }}
#        port: ${{ secrets.SERVER_SSH_PORT }}
#        run: |
#          curl -LJO https://raw.githubusercontent.com/sam-planton/OC_P7_CreditScore/main/api.py
#          python3 api.py


